using System.Collections;
using Kolyteon.Common;
using Kolyteon.GraphColouring;

namespace Kolyteon.Tests.Integration.ProblemSolving.TestData;

public static partial class ExampleProblems
{
    public static class GraphColouring
    {
        public sealed class Solvable : IEnumerable<object[]>
        {
            public IEnumerator<object[]> GetEnumerator()
            {
                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Black, Colour.White)
                        .AddNode(Node.FromName("N00"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Black, Colour.White)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddEdge(Edge.Parse("(N00)-(N01)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Black)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddEdge(Edge.Parse("(N00)-(N02)"))
                        .AddEdge(Edge.Parse("(N00)-(N03)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .AddEdge(Edge.Parse("(N01)-(N03)"))
                        .AddEdge(Edge.Parse("(N02)-(N03)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddEdge(Edge.Parse("(N00)-(N02)"))
                        .AddEdge(Edge.Parse("(N00)-(N03)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .AddEdge(Edge.Parse("(N03)-(N04)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddEdge(Edge.Parse("(N00)-(N01)"))
                        .AddEdge(Edge.Parse("(N00)-(N02)"))
                        .AddEdge(Edge.Parse("(N00)-(N05)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .AddEdge(Edge.Parse("(N01)-(N03)"))
                        .AddEdge(Edge.Parse("(N02)-(N03)"))
                        .AddEdge(Edge.Parse("(N02)-(N04)"))
                        .AddEdge(Edge.Parse("(N04)-(N05)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddEdge(Edge.Parse("(N00)-(N03)"))
                        .AddEdge(Edge.Parse("(N00)-(N04)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .AddEdge(Edge.Parse("(N01)-(N06)"))
                        .AddEdge(Edge.Parse("(N02)-(N05)"))
                        .AddEdge(Edge.Parse("(N02)-(N06)"))
                        .AddEdge(Edge.Parse("(N03)-(N04)"))
                        .AddEdge(Edge.Parse("(N03)-(N05)"))
                        .AddEdge(Edge.Parse("(N03)-(N06)"))
                        .AddEdge(Edge.Parse("(N05)-(N06)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddEdge(Edge.Parse("(N00)-(N03)"))
                        .AddEdge(Edge.Parse("(N00)-(N04)"))
                        .AddEdge(Edge.Parse("(N00)-(N06)"))
                        .AddEdge(Edge.Parse("(N00)-(N07)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .AddEdge(Edge.Parse("(N01)-(N03)"))
                        .AddEdge(Edge.Parse("(N01)-(N04)"))
                        .AddEdge(Edge.Parse("(N01)-(N05)"))
                        .AddEdge(Edge.Parse("(N02)-(N05)"))
                        .AddEdge(Edge.Parse("(N03)-(N05)"))
                        .AddEdge(Edge.Parse("(N04)-(N06)"))
                        .AddEdge(Edge.Parse("(N06)-(N07)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddEdge(Edge.Parse("(N00)-(N05)"))
                        .AddEdge(Edge.Parse("(N00)-(N06)"))
                        .AddEdge(Edge.Parse("(N01)-(N03)"))
                        .AddEdge(Edge.Parse("(N01)-(N04)"))
                        .AddEdge(Edge.Parse("(N02)-(N03)"))
                        .AddEdge(Edge.Parse("(N02)-(N04)"))
                        .AddEdge(Edge.Parse("(N02)-(N06)"))
                        .AddEdge(Edge.Parse("(N02)-(N07)"))
                        .AddEdge(Edge.Parse("(N03)-(N04)"))
                        .AddEdge(Edge.Parse("(N04)-(N07)"))
                        .AddEdge(Edge.Parse("(N04)-(N08)"))
                        .AddEdge(Edge.Parse("(N05)-(N06)"))
                        .AddEdge(Edge.Parse("(N05)-(N07)"))
                        .AddEdge(Edge.Parse("(N05)-(N08)"))
                        .AddEdge(Edge.Parse("(N07)-(N08)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddEdge(Edge.Parse("(N00)-(N02)"))
                        .AddEdge(Edge.Parse("(N00)-(N03)"))
                        .AddEdge(Edge.Parse("(N00)-(N08)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .AddEdge(Edge.Parse("(N01)-(N05)"))
                        .AddEdge(Edge.Parse("(N01)-(N09)"))
                        .AddEdge(Edge.Parse("(N02)-(N05)"))
                        .AddEdge(Edge.Parse("(N02)-(N08)"))
                        .AddEdge(Edge.Parse("(N03)-(N04)"))
                        .AddEdge(Edge.Parse("(N03)-(N08)"))
                        .AddEdge(Edge.Parse("(N04)-(N06)"))
                        .AddEdge(Edge.Parse("(N04)-(N07)"))
                        .AddEdge(Edge.Parse("(N05)-(N07)"))
                        .AddEdge(Edge.Parse("(N05)-(N08)"))
                        .AddEdge(Edge.Parse("(N05)-(N09)"))
                        .AddEdge(Edge.Parse("(N06)-(N07)"))
                        .AddEdge(Edge.Parse("(N07)-(N08)"))
                        .AddEdge(Edge.Parse("(N07)-(N09)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddNode(Node.FromName("N10"))
                        .AddEdge(Edge.Parse("(N00)-(N01)"))
                        .AddEdge(Edge.Parse("(N00)-(N02)"))
                        .AddEdge(Edge.Parse("(N00)-(N03)"))
                        .AddEdge(Edge.Parse("(N00)-(N04)"))
                        .AddEdge(Edge.Parse("(N00)-(N05)"))
                        .AddEdge(Edge.Parse("(N00)-(N09)"))
                        .AddEdge(Edge.Parse("(N00)-(N10)"))
                        .AddEdge(Edge.Parse("(N01)-(N03)"))
                        .AddEdge(Edge.Parse("(N01)-(N06)"))
                        .AddEdge(Edge.Parse("(N02)-(N09)"))
                        .AddEdge(Edge.Parse("(N02)-(N10)"))
                        .AddEdge(Edge.Parse("(N03)-(N06)"))
                        .AddEdge(Edge.Parse("(N03)-(N07)"))
                        .AddEdge(Edge.Parse("(N03)-(N08)"))
                        .AddEdge(Edge.Parse("(N04)-(N10)"))
                        .AddEdge(Edge.Parse("(N05)-(N09)"))
                        .AddEdge(Edge.Parse("(N06)-(N07)"))
                        .AddEdge(Edge.Parse("(N07)-(N08)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddNode(Node.FromName("N10"))
                        .AddNode(Node.FromName("N11"))
                        .AddEdge(Edge.Parse("(N00)-(N06)"))
                        .AddEdge(Edge.Parse("(N00)-(N07)"))
                        .AddEdge(Edge.Parse("(N00)-(N08)"))
                        .AddEdge(Edge.Parse("(N01)-(N05)"))
                        .AddEdge(Edge.Parse("(N01)-(N09)"))
                        .AddEdge(Edge.Parse("(N01)-(N10)"))
                        .AddEdge(Edge.Parse("(N01)-(N11)"))
                        .AddEdge(Edge.Parse("(N02)-(N03)"))
                        .AddEdge(Edge.Parse("(N02)-(N04)"))
                        .AddEdge(Edge.Parse("(N02)-(N05)"))
                        .AddEdge(Edge.Parse("(N02)-(N06)"))
                        .AddEdge(Edge.Parse("(N02)-(N07)"))
                        .AddEdge(Edge.Parse("(N02)-(N08)"))
                        .AddEdge(Edge.Parse("(N02)-(N10)"))
                        .AddEdge(Edge.Parse("(N02)-(N11)"))
                        .AddEdge(Edge.Parse("(N03)-(N06)"))
                        .AddEdge(Edge.Parse("(N04)-(N07)"))
                        .AddEdge(Edge.Parse("(N05)-(N11)"))
                        .AddEdge(Edge.Parse("(N06)-(N08)"))
                        .AddEdge(Edge.Parse("(N07)-(N08)"))
                        .AddEdge(Edge.Parse("(N09)-(N10)"))
                        .AddEdge(Edge.Parse("(N10)-(N11)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddNode(Node.FromName("N10"))
                        .AddNode(Node.FromName("N11"))
                        .AddNode(Node.FromName("N12"))
                        .AddEdge(Edge.Parse("(N00)-(N02)"))
                        .AddEdge(Edge.Parse("(N00)-(N04)"))
                        .AddEdge(Edge.Parse("(N00)-(N10)"))
                        .AddEdge(Edge.Parse("(N00)-(N11)"))
                        .AddEdge(Edge.Parse("(N00)-(N12)"))
                        .AddEdge(Edge.Parse("(N01)-(N07)"))
                        .AddEdge(Edge.Parse("(N01)-(N08)"))
                        .AddEdge(Edge.Parse("(N01)-(N10)"))
                        .AddEdge(Edge.Parse("(N01)-(N12)"))
                        .AddEdge(Edge.Parse("(N02)-(N04)"))
                        .AddEdge(Edge.Parse("(N03)-(N04)"))
                        .AddEdge(Edge.Parse("(N03)-(N05)"))
                        .AddEdge(Edge.Parse("(N03)-(N06)"))
                        .AddEdge(Edge.Parse("(N03)-(N08)"))
                        .AddEdge(Edge.Parse("(N04)-(N06)"))
                        .AddEdge(Edge.Parse("(N04)-(N11)"))
                        .AddEdge(Edge.Parse("(N05)-(N06)"))
                        .AddEdge(Edge.Parse("(N05)-(N07)"))
                        .AddEdge(Edge.Parse("(N05)-(N09)"))
                        .AddEdge(Edge.Parse("(N06)-(N09)"))
                        .AddEdge(Edge.Parse("(N07)-(N08)"))
                        .AddEdge(Edge.Parse("(N08)-(N11)"))
                        .AddEdge(Edge.Parse("(N10)-(N11)"))
                        .AddEdge(Edge.Parse("(N10)-(N12)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddNode(Node.FromName("N10"))
                        .AddNode(Node.FromName("N11"))
                        .AddNode(Node.FromName("N12"))
                        .AddNode(Node.FromName("N13"))
                        .AddEdge(Edge.Parse("(N00)-(N03)"))
                        .AddEdge(Edge.Parse("(N00)-(N05)"))
                        .AddEdge(Edge.Parse("(N00)-(N06)"))
                        .AddEdge(Edge.Parse("(N00)-(N07)"))
                        .AddEdge(Edge.Parse("(N00)-(N08)"))
                        .AddEdge(Edge.Parse("(N00)-(N09)"))
                        .AddEdge(Edge.Parse("(N00)-(N13)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .AddEdge(Edge.Parse("(N01)-(N03)"))
                        .AddEdge(Edge.Parse("(N01)-(N05)"))
                        .AddEdge(Edge.Parse("(N01)-(N10)"))
                        .AddEdge(Edge.Parse("(N01)-(N12)"))
                        .AddEdge(Edge.Parse("(N02)-(N04)"))
                        .AddEdge(Edge.Parse("(N02)-(N10)"))
                        .AddEdge(Edge.Parse("(N02)-(N11)"))
                        .AddEdge(Edge.Parse("(N02)-(N12)"))
                        .AddEdge(Edge.Parse("(N03)-(N05)"))
                        .AddEdge(Edge.Parse("(N03)-(N08)"))
                        .AddEdge(Edge.Parse("(N04)-(N09)"))
                        .AddEdge(Edge.Parse("(N04)-(N10)"))
                        .AddEdge(Edge.Parse("(N04)-(N13)"))
                        .AddEdge(Edge.Parse("(N05)-(N07)"))
                        .AddEdge(Edge.Parse("(N06)-(N07)"))
                        .AddEdge(Edge.Parse("(N06)-(N11)"))
                        .AddEdge(Edge.Parse("(N07)-(N12)"))
                        .AddEdge(Edge.Parse("(N08)-(N09)"))
                        .AddEdge(Edge.Parse("(N08)-(N10)"))
                        .AddEdge(Edge.Parse("(N09)-(N13)"))
                        .AddEdge(Edge.Parse("(N11)-(N12)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddNode(Node.FromName("N10"))
                        .AddNode(Node.FromName("N11"))
                        .AddNode(Node.FromName("N12"))
                        .AddNode(Node.FromName("N13"))
                        .AddNode(Node.FromName("N14"))
                        .AddEdge(Edge.Parse("(N00)-(N01)"))
                        .AddEdge(Edge.Parse("(N00)-(N05)"))
                        .AddEdge(Edge.Parse("(N01)-(N05)"))
                        .AddEdge(Edge.Parse("(N01)-(N06)"))
                        .AddEdge(Edge.Parse("(N01)-(N09)"))
                        .AddEdge(Edge.Parse("(N02)-(N05)"))
                        .AddEdge(Edge.Parse("(N02)-(N06)"))
                        .AddEdge(Edge.Parse("(N02)-(N07)"))
                        .AddEdge(Edge.Parse("(N02)-(N11)"))
                        .AddEdge(Edge.Parse("(N03)-(N08)"))
                        .AddEdge(Edge.Parse("(N03)-(N10)"))
                        .AddEdge(Edge.Parse("(N03)-(N14)"))
                        .AddEdge(Edge.Parse("(N04)-(N07)"))
                        .AddEdge(Edge.Parse("(N04)-(N08)"))
                        .AddEdge(Edge.Parse("(N04)-(N12)"))
                        .AddEdge(Edge.Parse("(N04)-(N13)"))
                        .AddEdge(Edge.Parse("(N05)-(N06)"))
                        .AddEdge(Edge.Parse("(N06)-(N07)"))
                        .AddEdge(Edge.Parse("(N07)-(N08)"))
                        .AddEdge(Edge.Parse("(N07)-(N09)"))
                        .AddEdge(Edge.Parse("(N07)-(N10)"))
                        .AddEdge(Edge.Parse("(N07)-(N11)"))
                        .AddEdge(Edge.Parse("(N07)-(N12)"))
                        .AddEdge(Edge.Parse("(N08)-(N10)"))
                        .AddEdge(Edge.Parse("(N08)-(N14)"))
                        .AddEdge(Edge.Parse("(N09)-(N10)"))
                        .AddEdge(Edge.Parse("(N11)-(N12)"))
                        .AddEdge(Edge.Parse("(N11)-(N13)"))
                        .AddEdge(Edge.Parse("(N12)-(N13)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddNode(Node.FromName("N10"))
                        .AddNode(Node.FromName("N11"))
                        .AddNode(Node.FromName("N12"))
                        .AddNode(Node.FromName("N13"))
                        .AddNode(Node.FromName("N14"))
                        .AddNode(Node.FromName("N15"))
                        .AddEdge(Edge.Parse("(N00)-(N07)"))
                        .AddEdge(Edge.Parse("(N00)-(N08)"))
                        .AddEdge(Edge.Parse("(N00)-(N10)"))
                        .AddEdge(Edge.Parse("(N00)-(N15)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .AddEdge(Edge.Parse("(N01)-(N05)"))
                        .AddEdge(Edge.Parse("(N02)-(N05)"))
                        .AddEdge(Edge.Parse("(N02)-(N06)"))
                        .AddEdge(Edge.Parse("(N02)-(N07)"))
                        .AddEdge(Edge.Parse("(N03)-(N04)"))
                        .AddEdge(Edge.Parse("(N03)-(N08)"))
                        .AddEdge(Edge.Parse("(N03)-(N10)"))
                        .AddEdge(Edge.Parse("(N03)-(N12)"))
                        .AddEdge(Edge.Parse("(N04)-(N06)"))
                        .AddEdge(Edge.Parse("(N04)-(N10)"))
                        .AddEdge(Edge.Parse("(N04)-(N11)"))
                        .AddEdge(Edge.Parse("(N04)-(N12)"))
                        .AddEdge(Edge.Parse("(N06)-(N07)"))
                        .AddEdge(Edge.Parse("(N07)-(N10)"))
                        .AddEdge(Edge.Parse("(N07)-(N13)"))
                        .AddEdge(Edge.Parse("(N07)-(N14)"))
                        .AddEdge(Edge.Parse("(N07)-(N15)"))
                        .AddEdge(Edge.Parse("(N08)-(N09)"))
                        .AddEdge(Edge.Parse("(N08)-(N13)"))
                        .AddEdge(Edge.Parse("(N08)-(N15)"))
                        .AddEdge(Edge.Parse("(N09)-(N14)"))
                        .AddEdge(Edge.Parse("(N11)-(N12)"))
                        .AddEdge(Edge.Parse("(N13)-(N14)"))
                        .AddEdge(Edge.Parse("(N13)-(N15)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddNode(Node.FromName("N10"))
                        .AddNode(Node.FromName("N11"))
                        .AddNode(Node.FromName("N12"))
                        .AddNode(Node.FromName("N13"))
                        .AddNode(Node.FromName("N14"))
                        .AddNode(Node.FromName("N15"))
                        .AddNode(Node.FromName("N16"))
                        .AddEdge(Edge.Parse("(N00)-(N06)"))
                        .AddEdge(Edge.Parse("(N00)-(N09)"))
                        .AddEdge(Edge.Parse("(N00)-(N11)"))
                        .AddEdge(Edge.Parse("(N00)-(N13)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .AddEdge(Edge.Parse("(N01)-(N03)"))
                        .AddEdge(Edge.Parse("(N01)-(N04)"))
                        .AddEdge(Edge.Parse("(N01)-(N08)"))
                        .AddEdge(Edge.Parse("(N02)-(N04)"))
                        .AddEdge(Edge.Parse("(N02)-(N06)"))
                        .AddEdge(Edge.Parse("(N03)-(N08)"))
                        .AddEdge(Edge.Parse("(N04)-(N05)"))
                        .AddEdge(Edge.Parse("(N04)-(N08)"))
                        .AddEdge(Edge.Parse("(N04)-(N09)"))
                        .AddEdge(Edge.Parse("(N04)-(N12)"))
                        .AddEdge(Edge.Parse("(N04)-(N13)"))
                        .AddEdge(Edge.Parse("(N05)-(N09)"))
                        .AddEdge(Edge.Parse("(N05)-(N10)"))
                        .AddEdge(Edge.Parse("(N05)-(N11)"))
                        .AddEdge(Edge.Parse("(N05)-(N12)"))
                        .AddEdge(Edge.Parse("(N05)-(N14)"))
                        .AddEdge(Edge.Parse("(N06)-(N13)"))
                        .AddEdge(Edge.Parse("(N07)-(N08)"))
                        .AddEdge(Edge.Parse("(N07)-(N14)"))
                        .AddEdge(Edge.Parse("(N07)-(N15)"))
                        .AddEdge(Edge.Parse("(N07)-(N16)"))
                        .AddEdge(Edge.Parse("(N08)-(N12)"))
                        .AddEdge(Edge.Parse("(N08)-(N15)"))
                        .AddEdge(Edge.Parse("(N09)-(N13)"))
                        .AddEdge(Edge.Parse("(N10)-(N11)"))
                        .AddEdge(Edge.Parse("(N10)-(N14)"))
                        .AddEdge(Edge.Parse("(N10)-(N16)"))
                        .AddEdge(Edge.Parse("(N12)-(N15)"))
                        .AddEdge(Edge.Parse("(N14)-(N15)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Green, Colour.Red, Colour.Yellow, Colour.Blue)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddNode(Node.FromName("N10"))
                        .AddNode(Node.FromName("N11"))
                        .AddNode(Node.FromName("N12"))
                        .AddNode(Node.FromName("N13"))
                        .AddNode(Node.FromName("N14"))
                        .AddNode(Node.FromName("N15"))
                        .AddNode(Node.FromName("N16"))
                        .AddNode(Node.FromName("N17"))
                        .AddEdge(Edge.Parse("(N00)-(N05)"))
                        .AddEdge(Edge.Parse("(N00)-(N08)"))
                        .AddEdge(Edge.Parse("(N00)-(N16)"))
                        .AddEdge(Edge.Parse("(N00)-(N17)"))
                        .AddEdge(Edge.Parse("(N01)-(N03)"))
                        .AddEdge(Edge.Parse("(N01)-(N04)"))
                        .AddEdge(Edge.Parse("(N01)-(N12)"))
                        .AddEdge(Edge.Parse("(N01)-(N14)"))
                        .AddEdge(Edge.Parse("(N02)-(N04)"))
                        .AddEdge(Edge.Parse("(N02)-(N07)"))
                        .AddEdge(Edge.Parse("(N02)-(N08)"))
                        .AddEdge(Edge.Parse("(N02)-(N09)"))
                        .AddEdge(Edge.Parse("(N02)-(N13)"))
                        .AddEdge(Edge.Parse("(N03)-(N04)"))
                        .AddEdge(Edge.Parse("(N03)-(N06)"))
                        .AddEdge(Edge.Parse("(N04)-(N05)"))
                        .AddEdge(Edge.Parse("(N04)-(N06)"))
                        .AddEdge(Edge.Parse("(N04)-(N09)"))
                        .AddEdge(Edge.Parse("(N04)-(N10)"))
                        .AddEdge(Edge.Parse("(N04)-(N12)"))
                        .AddEdge(Edge.Parse("(N04)-(N13)"))
                        .AddEdge(Edge.Parse("(N05)-(N08)"))
                        .AddEdge(Edge.Parse("(N05)-(N10)"))
                        .AddEdge(Edge.Parse("(N05)-(N11)"))
                        .AddEdge(Edge.Parse("(N05)-(N12)"))
                        .AddEdge(Edge.Parse("(N06)-(N13)"))
                        .AddEdge(Edge.Parse("(N07)-(N08)"))
                        .AddEdge(Edge.Parse("(N08)-(N09)"))
                        .AddEdge(Edge.Parse("(N08)-(N10)"))
                        .AddEdge(Edge.Parse("(N08)-(N17)"))
                        .AddEdge(Edge.Parse("(N09)-(N10)"))
                        .AddEdge(Edge.Parse("(N11)-(N12)"))
                        .AddEdge(Edge.Parse("(N11)-(N14)"))
                        .AddEdge(Edge.Parse("(N11)-(N16)"))
                        .AddEdge(Edge.Parse("(N14)-(N15)"))
                        .AddEdge(Edge.Parse("(N15)-(N16)"))
                        .Build()
                ];
            }

            IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();
        }

        public sealed class Unsolvable : IEnumerable<object[]>
        {
            public IEnumerator<object[]> GetEnumerator()
            {
                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Black)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddEdge(Edge.Parse("(N00)-(N01)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Black, Colour.White)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddEdge(Edge.Parse("(N00)-(N01)"))
                        .AddEdge(Edge.Parse("(N00)-(N02)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseNodeSpecificColours()
                        .AddNodeAndColours(Node.FromName("N00"), Colour.Black, Colour.White)
                        .AddNodeAndColours(Node.FromName("N01"), Colour.Black, Colour.White)
                        .AddNodeAndColours(Node.FromName("N02"))
                        .AddEdge(Edge.Parse("(N00)-(N01)"))
                        .AddEdge(Edge.Parse("(N00)-(N02)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Black, Colour.White)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddNode(Node.FromName("N10"))
                        .AddNode(Node.FromName("N11"))
                        .AddEdge(Edge.Parse("(N00)-(N06)"))
                        .AddEdge(Edge.Parse("(N00)-(N07)"))
                        .AddEdge(Edge.Parse("(N00)-(N08)"))
                        .AddEdge(Edge.Parse("(N01)-(N05)"))
                        .AddEdge(Edge.Parse("(N01)-(N09)"))
                        .AddEdge(Edge.Parse("(N01)-(N10)"))
                        .AddEdge(Edge.Parse("(N01)-(N11)"))
                        .AddEdge(Edge.Parse("(N02)-(N03)"))
                        .AddEdge(Edge.Parse("(N02)-(N04)"))
                        .AddEdge(Edge.Parse("(N02)-(N05)"))
                        .AddEdge(Edge.Parse("(N02)-(N06)"))
                        .AddEdge(Edge.Parse("(N02)-(N07)"))
                        .AddEdge(Edge.Parse("(N02)-(N08)"))
                        .AddEdge(Edge.Parse("(N02)-(N10)"))
                        .AddEdge(Edge.Parse("(N02)-(N11)"))
                        .AddEdge(Edge.Parse("(N03)-(N06)"))
                        .AddEdge(Edge.Parse("(N04)-(N07)"))
                        .AddEdge(Edge.Parse("(N05)-(N11)"))
                        .AddEdge(Edge.Parse("(N06)-(N08)"))
                        .AddEdge(Edge.Parse("(N07)-(N08)"))
                        .AddEdge(Edge.Parse("(N09)-(N10)"))
                        .AddEdge(Edge.Parse("(N10)-(N11)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Black, Colour.White)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddNode(Node.FromName("N10"))
                        .AddNode(Node.FromName("N11"))
                        .AddNode(Node.FromName("N12"))
                        .AddEdge(Edge.Parse("(N00)-(N02)"))
                        .AddEdge(Edge.Parse("(N00)-(N04)"))
                        .AddEdge(Edge.Parse("(N00)-(N10)"))
                        .AddEdge(Edge.Parse("(N00)-(N11)"))
                        .AddEdge(Edge.Parse("(N00)-(N12)"))
                        .AddEdge(Edge.Parse("(N01)-(N07)"))
                        .AddEdge(Edge.Parse("(N01)-(N08)"))
                        .AddEdge(Edge.Parse("(N01)-(N10)"))
                        .AddEdge(Edge.Parse("(N01)-(N12)"))
                        .AddEdge(Edge.Parse("(N02)-(N04)"))
                        .AddEdge(Edge.Parse("(N03)-(N04)"))
                        .AddEdge(Edge.Parse("(N03)-(N05)"))
                        .AddEdge(Edge.Parse("(N03)-(N06)"))
                        .AddEdge(Edge.Parse("(N03)-(N08)"))
                        .AddEdge(Edge.Parse("(N04)-(N06)"))
                        .AddEdge(Edge.Parse("(N04)-(N11)"))
                        .AddEdge(Edge.Parse("(N05)-(N06)"))
                        .AddEdge(Edge.Parse("(N05)-(N07)"))
                        .AddEdge(Edge.Parse("(N05)-(N09)"))
                        .AddEdge(Edge.Parse("(N06)-(N09)"))
                        .AddEdge(Edge.Parse("(N07)-(N08)"))
                        .AddEdge(Edge.Parse("(N08)-(N11)"))
                        .AddEdge(Edge.Parse("(N10)-(N11)"))
                        .AddEdge(Edge.Parse("(N10)-(N12)"))
                        .Build()
                ];

                yield return
                [
                    GraphColouringProblem.Create()
                        .UseGlobalColours(Colour.Black, Colour.White)
                        .AddNode(Node.FromName("N00"))
                        .AddNode(Node.FromName("N01"))
                        .AddNode(Node.FromName("N02"))
                        .AddNode(Node.FromName("N03"))
                        .AddNode(Node.FromName("N04"))
                        .AddNode(Node.FromName("N05"))
                        .AddNode(Node.FromName("N06"))
                        .AddNode(Node.FromName("N07"))
                        .AddNode(Node.FromName("N08"))
                        .AddNode(Node.FromName("N09"))
                        .AddNode(Node.FromName("N10"))
                        .AddNode(Node.FromName("N11"))
                        .AddNode(Node.FromName("N12"))
                        .AddNode(Node.FromName("N13"))
                        .AddEdge(Edge.Parse("(N00)-(N03)"))
                        .AddEdge(Edge.Parse("(N00)-(N05)"))
                        .AddEdge(Edge.Parse("(N00)-(N06)"))
                        .AddEdge(Edge.Parse("(N00)-(N07)"))
                        .AddEdge(Edge.Parse("(N00)-(N08)"))
                        .AddEdge(Edge.Parse("(N00)-(N09)"))
                        .AddEdge(Edge.Parse("(N00)-(N13)"))
                        .AddEdge(Edge.Parse("(N01)-(N02)"))
                        .AddEdge(Edge.Parse("(N01)-(N03)"))
                        .AddEdge(Edge.Parse("(N01)-(N05)"))
                        .AddEdge(Edge.Parse("(N01)-(N10)"))
                        .AddEdge(Edge.Parse("(N01)-(N12)"))
                        .AddEdge(Edge.Parse("(N02)-(N04)"))
                        .AddEdge(Edge.Parse("(N02)-(N10)"))
                        .AddEdge(Edge.Parse("(N02)-(N11)"))
                        .AddEdge(Edge.Parse("(N02)-(N12)"))
                        .AddEdge(Edge.Parse("(N03)-(N05)"))
                        .AddEdge(Edge.Parse("(N03)-(N08)"))
                        .AddEdge(Edge.Parse("(N04)-(N09)"))
                        .AddEdge(Edge.Parse("(N04)-(N10)"))
                        .AddEdge(Edge.Parse("(N04)-(N13)"))
                        .AddEdge(Edge.Parse("(N05)-(N07)"))
                        .AddEdge(Edge.Parse("(N06)-(N07)"))
                        .AddEdge(Edge.Parse("(N06)-(N11)"))
                        .AddEdge(Edge.Parse("(N07)-(N12)"))
                        .AddEdge(Edge.Parse("(N08)-(N09)"))
                        .AddEdge(Edge.Parse("(N08)-(N10)"))
                        .AddEdge(Edge.Parse("(N09)-(N13)"))
                        .AddEdge(Edge.Parse("(N11)-(N12)"))
                        .Build()
                ];
            }

            IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();
        }
    }
}
